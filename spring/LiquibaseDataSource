import org.springframework.boot.autoconfigure.liquibase.LiquibaseProperties;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.boot.jdbc.DataSourceBuilder;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Primary;

import javax.sql.DataSource;

@Configuration
public class DataSourceConfiguration {

    @Bean
    @Primary
    @ConfigurationProperties("spring.datasource")
    public DataSource dataSource() {
        return DataSourceBuilder.create().build();
    }

    @Bean
    @ConfigurationProperties("datasourceA")
    public DataSource dataSourceA() {
        return DataSourceBuilder.create().build();
    }

    @Bean
    @ConfigurationProperties("datasourceB")
    public DataSource dataSourceB() {
        return DataSourceBuilder.create().build();
    }

    @Bean
    @ConfigurationProperties("datasourceA.liquibase")
    public LiquibaseProperties dataSourceALiquibaseProperties() {
        return new LiquibaseProperties();
    }

    @Bean
    @ConfigurationProperties("datasourceB.liquibase")
    public LiquibaseProperties dataSourceBLiquibaseProperties() {
        return new LiquibaseProperties();
    }

    @Bean
    public SpringLiquibase liquibaseA() {
        return createLiquibase(dataSourceA(), dataSourceALiquibaseProperties());
    }

    @Bean
    public SpringLiquibase liquibaseB() {
        return createLiquibase(dataSourceB(), dataSourceBLiquibaseProperties());
    }

    private SpringLiquibase createLiquibase(DataSource dataSource, LiquibaseProperties liquibaseProperties) {
        SpringLiquibase liquibase = new SpringLiquibase();
        liquibase.setDataSource(dataSource);
        liquibase.setChangeLog(liquibaseProperties.getChangeLog());
        liquibase.setContexts(liquibaseProperties.getContexts());
        liquibase.setDefaultSchema(liquibaseProperties.getDefaultSchema());
        liquibase.setDropFirst(liquibaseProperties.isDropFirst());
        liquibase.setShouldRun(liquibaseProperties.isEnabled());
        return liquibase;
    }
}
